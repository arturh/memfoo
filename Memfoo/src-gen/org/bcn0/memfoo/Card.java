package org.bcn0.memfoo;

import java.util.Arrays;
import java.util.Date;


// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
import java.util.List;

import org.bcn0.memfoo.CardDao.Properties;
// KEEP INCLUDES END
/**
 * Entity mapped to table CARD.
 */
public class Card {

    private Long id;
    private String kanji;
    private String kana;
    private String meaning;
    private String audio;
    private java.util.Date due;
    private java.util.Date introduced;
    private Integer correct;
    private Integer lesson;

    // KEEP FIELDS - put your custom fields here
    
    public static final List<String> lessons = Arrays.asList(
    		"verb01",
    		"adjective01",
    		"adjective02",
    		"adjective03",
    		"adjective04",
    		"adjective05",
    		"body",
    		"classroom",
    		"clothes",
    		"clothes complements",
    		"color",
    		"counter",
    		"drink",
    		"etiquette",
    		"family",
    		"family honorific",
    		"food",
    		"food ingredients",
    		"health",
    		"home",
    		"home activity",
    		"home furniture",
    		"home hygiene",
    		"home room",
    		"home things",
    		"leisure",
    		"lesson",
    		"meal",
    		"measure",
    		"media",
    		"misc01",
    		"misc02",
    		"misc03",
    		"misc04",
    		"misc05",
    		"misc06",
    		"misc07",
    		"nature",
    		"nature weather",
    		"number",
    		"number count",
    		"people",
    		"people occupation",
    		"place",
    		"place city",
    		"quantity",
    		"shop",
    		"stationery",
    		"study",
    		"study verbs",
    		"time",
    		"time clock",
    		"time day",
    		"time month",
    		"time month day",
    		"time season",
    		"time week",
    		"time year",
    		"transport",
    		"transport verb",

    		"verb02",
    		"verb03",
    		"verb04",
    		"when",
    		"where01",
    		"where02",
    		"where03",
    		"work"
    		);
    // KEEP FIELDS END

    public Card() {
    }

    public Card(Long id) {
        this.id = id;
    }

    public Card(Long id, String kanji, String kana, String meaning, String audio, java.util.Date due, java.util.Date introduced, Integer correct, Integer lesson) {
        this.id = id;
        this.kanji = kanji;
        this.kana = kana;
        this.meaning = meaning;
        this.audio = audio;
        this.due = due;
        this.introduced = introduced;
        this.correct = correct;
        this.lesson = lesson;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getKanji() {
        return kanji;
    }

    public void setKanji(String kanji) {
        this.kanji = kanji;
    }

    public String getKana() {
        return kana;
    }

    public void setKana(String kana) {
        this.kana = kana;
    }

    public String getMeaning() {
        return meaning;
    }

    public void setMeaning(String meaning) {
        this.meaning = meaning;
    }

    public String getAudio() {
        return audio;
    }

    public void setAudio(String audio) {
        this.audio = audio;
    }

    public java.util.Date getDue() {
        return due;
    }

    public void setDue(java.util.Date due) {
        this.due = due;
    }

    public java.util.Date getIntroduced() {
        return introduced;
    }

    public void setIntroduced(java.util.Date introduced) {
        this.introduced = introduced;
    }

    public Integer getCorrect() {
        return correct;
    }

    public void setCorrect(Integer correct) {
        this.correct = correct;
    }

    public Integer getLesson() {
        return lesson;
    }

    public void setLesson(Integer lesson) {
        this.lesson = lesson;
    }

    // KEEP METHODS - put your custom methods here
    
	public static List<Card> dueCards(CardDao cardDao) {
		return cardDao.queryBuilder()
				.where(Properties.Due.lt(new Date()))
				.orderAsc(Properties.Due)
				.list();
	}

	public static List<Card> newCards(CardDao cardDao) {
		return cardDao.queryBuilder()
				.where(Properties.Introduced.isNull())
				.orderAsc(Properties.Lesson)
				.list();
		
	}
    // KEEP METHODS END

}
